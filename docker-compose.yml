
services:
  traefik:
    image: traefik:v3.2
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--api.insecure=false"  # Only for development
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - wordpress_network

  wordpress:
    environment:
      WORDPRESS_DB_HOST: wordpress_db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress

    volumes:
      - ./.docker/php/custom.ini:/usr/local/etc/php/conf.d/custom.ini
      - wordpress-uploads:/var/www/html/wp-content/uploads
    depends_on:
      wordpress_db:
        condition: service_healthy
    networks:
      - wordpress_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wordpress.rule=HostRegexp(`[a-zA-Z0-9-]+.wordpress.docker.local`) || Host(`wordpress.docker.local`)"
      - "traefik.http.routers.wordpress.entrypoints=web"
      - "traefik.http.services.wordpress.loadbalancer.server.port=80"

  wordpress_db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    volumes:
      - wordpress-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysql", "-u", "wordpress", "-pwordpress", "--execute", "SHOW DATABASES;"]
      timeout: 5s
      interval: 5s
      retries: 10
    networks:
      - wordpress_network

  wordpress_cache:
    image: redis:7.4-alpine
    restart: always
    networks:
      - wordpress_network
    volumes:
      - wordpress-cache:/data
    command: redis-server --save 60 1 --loglevel verbose

networks:
  wordpress_network:
    driver: bridge

volumes:
  wordpress-data:
  wordpress-uploads:
  wordpress-cache:
